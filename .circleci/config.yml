version: 2

jobs:
  build_js:
    docker:
      - image: trzeci/emscripten-ubuntu:sdk-incoming-64bit
    steps:
      - checkout
      - run: git submodule update --init
      - run: python --version && emcc --version && cmake --version
      - run: python src/build_javascript_lib.py
      - persist_to_workspace:
          root: src/build/artifacts_js
          paths:
            - .
  deploy_js:
    docker:
      - image: circleci/python:2.7-jessie
    environment:
      S3_BASE_URL: s3://files.na.mcneel.com/rhino3dm/js
    steps:
      - attach_workspace:
          at: src/build/artifacts_js
      - run: ls -l src/build/artifacts_js
      - run: python --version
      - run: sudo pip install awscli
        # upload artifacts to s3
      - run: aws s3 cp src/build/artifacts_js $S3_BASE_URL/dujour/$CIRCLE_BUILD_NUM/ --recursive --acl public-read
        # re-upload rhino3dm.wasm with mime-type "application/wasm"
      - run: aws s3 cp src/build/artifacts_js/rhino3dm.wasm $S3_BASE_URL/dujour/$CIRCLE_BUILD_NUM/ --acl public-read --content-type "application/wasm"
        # copy artifacts from dujour/$CIRCLE_BUILD_NUM/ to latest/
      - run:
          name: Copy artifacts to latest/
          command: |
            if [ "${CIRCLE_BRANCH}" = "master" ]; then
              aws s3 cp $S3_BASE_URL/dujour/$CIRCLE_BUILD_NUM/ $S3_BASE_URL/latest/ --recursive --acl public-read
            fi

  build_py2:
    docker:
      - image: mcneel/rhino3dm-dev:latest
    steps:
      - checkout
      - run: git submodule update --init
      - run: python2 --version && cmake --version
      - run: python2 setup.py bdist_wheel

  build_py3:
    docker:
      - image: mcneel/rhino3dm-dev:latest
    steps:
      - checkout
      - run: git submodule update --init
      - run: python3 --version && cmake --version
      - run: python3 setup.py bdist_wheel

  build_py2_mac:
    macos:
      xcode: "10.2.0"
    steps:
      # brew update required to workaround Homebrew/brew#5513
      - run: brew update
      - run: brew install cmake
      - run: cmake --version
      - run: python --version
      - checkout
      - run: git submodule update --init
      - run: python setup.py bdist_wheel

  build_dotnet:
    docker:
      - image: mcneel/rhino3dm-dev:latest
      - checkout
      - run: git submodule update --init
      - run: python3 --version
      - run: cmake --version
      - run:
          name: Build
          command: |
            cd src
            python3 build_dotnet.py

  build_dotnet_amazonlinux2:
    docker:
      - image: amazonlinux:2
    steps:
      - run:
          name: Bootstrap
          command: |
            yum update -y
            yum install -y git clang libuuid libuuid-devel
            # https://github.com/dotnet/core/blob/master/release-notes/download-archives/2.0.0-download.md#rhel-and-fedora-based-systems
            rpm --import https://packages.microsoft.com/keys/microsoft.asc
            sh -c 'echo -e "[packages-microsoft-com-prod]\nname=packages-microsoft-com-prod \nbaseurl=https://packages.microsoft.com/yumrepos/microsoft-rhel7.3-prod\nenabled=1\ngpgcheck=1\ngpgkey=https://packages.microsoft.com/keys/microsoft.asc" > /etc/yum.repos.d/dotnetdev.repo'
            yum install -y libunwind libicu
            yum update -y
            yum install -y dotnet-sdk-2.2
            dotnet --version
            # https://www.matbra.com/2017/12/07/install-cmake-on-aws-linux.html
            yum remove -y cmake
            curl -O https://cmake.org/files/v3.14/cmake-3.14.5.tar.gz
            yum install -y gcc-c++ make tar
            tar -xzf cmake-3.14.5.tar.gz
            cd cmake-3.14.5
            ./bootstrap
            make
            make install
            cmake --version
            cd ..
            rm -rf *
      - checkout
      - run: git submodule update --init
      - run:
          name: Build
          command: |
            cd src
            python3 build_dotnet.py

workflows:
  version: 2
  build:
    jobs:
      - build_js
      - deploy_js:
          requires:
            - build_js
      - build_py2
      - build_py3
      - build_py2_mac
      - build_dotnet
      - build_dotnet_amazonlinux2
